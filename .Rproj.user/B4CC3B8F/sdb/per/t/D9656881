{
    "contents" : "---\ntitle: \"Uber Take Home\"\nauthor: \"Jeffrey Uslan\"\ndate: \"November 1, 2015\"\noutput: word_document\n---\n```{r}\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(lubridate)\nlibrary(rpart)\nlibrary(randomForest)\nlibrary(MASS)\nlibrary(zoo)\nlibrary(caret)\nlibrary(pander)\n```\n\n```{r}\n load(file=\"uber_test_data.rda\")\n```\n\n\n```{r}\ndata=tbl_df(uber_unlist)\ndata$trips_in_first_30_days=as.numeric(as.character(data$trips_in_first_30_days))\ndata$signup_date=as.Date(data$signup_date)\ndata$avg_rating_of_driver=as.numeric(as.character(data$avg_rating_of_driver))\ndata$avg_surge=as.numeric(as.character(data$avg_surge))\ndata$last_trip_date=as.Date(data$last_trip_date)\ndata$surge_pct=as.numeric(as.character(data$surge_pct))\ndata$weekday_pct=as.numeric(as.character(data$weekday_pct))\ndata$avg_dist=as.numeric(as.character(data$avg_dist))\ndata$avg_rating_by_driver=as.numeric(as.character(data$avg_rating_by_driver))\n```\n\n```{r}\nnumeric_data_inds=sapply(data,is.numeric)\ncat_data_inds=!sapply(data,is.numeric)\n\n#tabulations of categorical data\npander(data %>% group_by(city) %>% summarise(Count=n()))\npander(data %>% group_by(phone) %>% summarise(Count=n()))\npander(data %>% group_by(uber_black_user) %>% summarise(Count=n()))\n```\n\n```{r}\n#generating retained variable\ndata$retained=0\ndata$retained[which(data$trips_in_first_30_days>0)]=1\nmean(data$retained,na.rm=TRUE)\n\n\ndata$retained=as.factor(data$retained)\ndata %>% group_by(retained) %>% summarise(Count=n())\n```\n\n#numeric exploration\n```{r}\ndata=na.omit(data)\n\n\n\npander(data %>% group_by(retained) %>% summarise(Distance=mean(avg_dist),Weekday=mean(weekday_pct),                                       Passenger=mean(avg_rating_by_driver),Driver=mean(avg_rating_of_driver),\n                                          Surges=mean(avg_surge)))\n\nggplot(data)+geom_density(aes(x=avg_dist))+theme_bw()+facet_grid(retained~.)+\n  ggtitle(\"Drive Distance\")+xlab(\"Miles\")+ylab(\"Density\")\n\n\nggplot(data)+geom_density(aes(x=weekday_pct))+theme_bw()+facet_grid(retained~.)+\n  ggtitle(\"Weekday Driving\")+xlab(\"Percent\")+ylab(\"Density\")\n\nggplot(data)+geom_density(aes(x=avg_rating_by_driver))+ theme_bw()+facet_grid(retained~.)+ggtitle(\"Passenger Ratings\")+xlab(\"Rating\")+ylab(\"Density\")\n\n\nggplot(data)+geom_density(aes(x=avg_rating_of_driver))+  theme_bw()+facet_grid(retained~.)+ggtitle(\"Driver Ratings\")+xlab(\"Rating\")+ylab(\"Density\")\n\nggplot(data)+geom_density(aes(x=avg_surge))+  \n  theme_bw()+facet_grid(retained~.)+ggtitle(\"Driver Ratings\")+xlab(\"Rating\")+ylab(\"Density\")\n\nggplot(data)+geom_density(aes(x=surge_pct))+  \n  theme_bw()+facet_grid(retained~.)+ggtitle(\"Driver Ratings\")+xlab(\"Rating\")+ylab(\"Density\")\n\n\n\n\n\n\n\n\n\n\n```\n\n#covariates\n```{r}\n\ninTrain = createDataPartition(y=data$retained, p = .6)[[1]]\ntraining = data[ inTrain,]\ntesting = data[-inTrain,]\n\nmodFit <- randomForest(retained ~city + phone +uber_black_user + avg_rating_of_driver +\n  avg_surge+ surge_pct + weekday_pct +avg_dist +avg_rating_by_driver ,data=training)\n\n\ntrain_pred=predict(modFit,newdata= training, type = \"response\")\nconfusionMatrix(training$retained,train_pred )\n\n\ntest_pred=predict(modFit,newdata= testing, type = \"response\")\nconfusionMatrix(testing$retained,test_pred)\n\n\nvarImpPlot(modFit,main=\"Variable Importance\")\n\n```\n\n\n",
    "created" : 1446433916508.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "980467510",
    "id" : "D9656881",
    "lastKnownWriteTime" : 1446437811,
    "path" : "~/Uber Test/Uber Take Home Test.Rmd",
    "project_path" : "Uber Take Home Test.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_markdown"
}