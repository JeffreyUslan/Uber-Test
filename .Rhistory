theme_bw()+ggtitle("Drive Distance")+xlab("Miles")+ylab("Density")
ggplot(data)+geom_density(aes(x=avg_rating_by_driver))+
theme_bw()+ggtitle("Passenger Ratings")+xlab("Rating")+ylab("Density")
varImpPlot(modFit,main="Variable Importance")
summary(data[,numeric_data_inds])
ggplot(data)+geom_density(aes(x=avg_dist))+facet_grid(retained~.)
theme_bw()+ggtitle("Drive Distance")+xlab("Miles")+ylab("Density")
ggplot(data)+geom_density(aes(x=avg_dist))+theme_bw()+facet_grid(retained~.)+
ggtitle("Drive Distance")+xlab("Miles")+ylab("Density")
data %>% group_by(retained) %>% summarise(Distance=mean(avg_dist),Weekday=mean(weekday_pct))
data %>% group_by(retained) %>% summarise(Distance=mean(avg_dist),Weekday=mean(weekday_pct),                                       Passenger=mean(avg_rating_by_driver),Driver=mean(avg_rating_of_driver),
Surges=mean(avg_surge))
ggplot(data)+geom_density(aes(x=avg_dist))+theme_bw()+facet_grid(retained~.)+
ggtitle("Drive Distance")+xlab("Miles")+ylab("Density")
ggplot(data)+geom_density(aes(x=weekday_pct))+theme_bw()+facet_grid(retained~.)+
ggtitle("Weekday Driving")+xlab("Percent")+ylab("Density")
ggplot(data)+geom_density(aes(x=avg_rating_by_driver))+ theme_bw()+facet_grid(retained~.)+ggtitle("Passenger Ratings")+xlab("Rating")+ylab("Density")
ggplot(data)+geom_density(aes(x=avg_rating_of_driver))+  theme_bw()+facet_grid(retained~.)+ggtitle("Driver Ratings")+xlab("Rating")+ylab("Density")
load(file="uber_test_data.rda")
data=tbl_df(uber_unlist)
data$signup_date=as.Date(data$signup_date)
data$avg_rating_of_driver=as.numeric(as.character(data$avg_rating_of_driver))
data$trips_in_first_30_days=as.numeric(as.character(data$trips_in_first_30_days))
data$avg_surge=as.numeric(as.character(data$avg_surge))
data$last_trip_date=as.Date(data$last_trip_date)
data$surge_pct=as.numeric(as.character(data$surge_pct))
data$weekday_pct=as.numeric(as.character(data$weekday_pct))
data$avg_dist=as.numeric(as.character(data$avg_dist))
data$avg_rating_by_driver=as.numeric(as.character(data$avg_rating_by_driver))
numeric_data_inds=sapply(data,is.numeric)
cat_data_inds=!sapply(data,is.numeric)
pander(data %>% group_by(city) %>% summarise(Count=n()))
pander(data %>% group_by(phone) %>% summarise(Count=n()))
pander(data %>% group_by(uber_black_user) %>% summarise(Count=n()))
data$retained=0
data$retained[which(data$trips_in_first_30_days>0)]=1
mean(data$retained,na.rm=TRUE)
library(tidyr)
library(tidyr)
library(dplyr)
library(randomForest)
library(caret)
library(readr)
data=tbl_df(read_csv("Holland America Revenue Science Interview REtention Dataset.csv"))
View(data)
data
names(data)
class(data$BKNG_ID)
data$BKNG_ID=as.factor(data$BKNG_ID)
class(data$HOME_STATE)
class(data$NATIONALITY)
class(data$AGE)
class(data$NBR_CRUISES)
class(data$GROUP_TYPE)
class(data$BKNG_STATUS)
data$BKNG_ID=as.factor(data$BKNG_ID)
data$HOME_STATE=as.factor(data$HOME_STATE)
data$NATIONALITY=as.factor(data$NATIONALITY)
data$HOME_COUNTRY=as.factor(data$HOME_COUNTRY)
data$GROUP_TYPE=as.factor(data$GROUP_TYPE)
data$BKNG_STATUS=as.factor(data$BKNG_STATUS)
names(data)
class(data$BKNG_OPEN_DATE)
data$BKNG_OPEN_DATE=as.Date(data$BKNG_OPEN_DATE)
data$BKNG_OPEN_DATE=as.Date(data$BKNG_OPEN_DATE,"%m/%d/%y")
View(data)
data$BKNG_CANCEL_DATE=as.Date(data$BKNG_CANCEL_DATE,"%m/%d/%y")
class(data$CURRENCY_CODE)
class(data$AIR_FLAG)
data$AIR_FLAG=as.factor(data$AIR_FLAG)
data$INSURANCE_PYMT_DATE=as.Date(data$INSURANCE_PYMT_DATE,"%m/%d/%y")
data=tbl_df(read_csv("Holland America Revenue Science Interview REtention Dataset.csv"))
data$BKNG_ID=as.factor(data$BKNG_ID)
data$HOME_STATE=as.factor(data$HOME_STATE)
data$NATIONALITY=as.factor(data$NATIONALITY)
data$HOME_COUNTRY=as.factor(data$HOME_COUNTRY)
data$GROUP_TYPE=as.factor(data$GROUP_TYPE)
data$BKNG_STATUS=as.factor(data$BKNG_STATUS)
data$CURRENCY_CODE=as.factor(data$CURRENCY_CODE)
data$AIR_FLAG=as.factor(data$AIR_FLAG)
data$BKNG_SOURCE=as.factor(data$BKNG_SOURCE)
data$BKNG_TYPE=as.factor(data$BKNG_TYPE)
data$GENDER=as.factor(data$GENDER)
data$DINING_TIME_CODE=as.factor(data$DINING_TIME_CODE)
data$DINING_TIME_CONF_FLAG=as.factor(data$DINING_TIME_CONF_FLAG)
data$BKNG_OPEN_DATE=as.Date(data$BKNG_OPEN_DATE,"%m/%d/%y")
data$BKNG_CANCEL_DATE=as.Date(data$BKNG_CANCEL_DATE,"%m/%d/%y")
View(data)
data$INSURANCE_PYMT_DATE=as.Date(data$INSURANCE_PYMT_DATE,"%m/%d/%y")
View(data)
names(data)
class(data$NET_TKT_REV)
library(lubridate)
data=tbl_df(read_csv("Holland America Revenue Science Interview REtention Dataset.csv"))
data$BKNG_ID=as.factor(data$BKNG_ID)
data$HOME_STATE=as.factor(data$HOME_STATE)
data$NATIONALITY=as.factor(data$NATIONALITY)
data$HOME_COUNTRY=as.factor(data$HOME_COUNTRY)
data$GROUP_TYPE=as.factor(data$GROUP_TYPE)
data$BKNG_STATUS=as.factor(data$BKNG_STATUS)
data$CURRENCY_CODE=as.factor(data$CURRENCY_CODE)
data$AIR_FLAG=as.factor(data$AIR_FLAG)
data$BKNG_SOURCE=as.factor(data$BKNG_SOURCE)
data$BKNG_TYPE=as.factor(data$BKNG_TYPE)
data$GENDER=as.factor(data$GENDER)
data$DINING_TIME_CODE=as.factor(data$DINING_TIME_CODE)
data$DINING_TIME_CONF_FLAG=as.factor(data$DINING_TIME_CONF_FLAG)
data$META=as.factor(data$META)
head(data$BKNG_OPEN_DATE)
head(as.Date(data$BKNG_OPEN_DATE,"%m/%d/%y"))
head(as.Date(data$BKNG_OPEN_DATE,"%m/%d/%Y"))
head(as.Date(data$BKNG_OPEN_DATE,"%m/%D/%Y"))
data$BKNG_OPEN_DATE=as.Date(data$BKNG_OPEN_DATE,"%m/%d/%Y")
data$BKNG_CANCEL_DATE=as.Date(data$BKNG_CANCEL_DATE,"%m/%d/%Y")
data$INSURANCE_PYMT_DATE=as.Date(data$INSURANCE_PYMT_DATE,"%m/%d/%Y")
data$SAIL_DATE=as.Date(data$SAIL_DATE,"%m/%d/%Y")
summary(data)
data %>% group_by(BKNG_STATUS) %>% summarise(count=n())
data %>% group_by(META) %>% summarise(count=n())
suite_people=data %>% filter(META %in% c('S','D'))
suite_people
View(data)
summary(data[,numeric_data_inds])
numeric_data_inds=sapply(data,is.numeric)
summary(data[,numeric_data_inds])
cat_data_inds=!sapply(data,is.numeric)
summary(data[,cat_data_inds])
NZV
?NZV
??nzv
date_data_inds=sapply(data,is.Date)
date_data_inds
numeric_data_inds+date_data_inds
numeric_data_inds or date_data_inds
numeric_data_inds %or% date_data_inds
nearZeroVar(data)
nzv=nearZeroVar(data)
str(nzv)
nzv
nzv=nzv(data)
nzv
nzv=nzv(data,saveMetrics=TRUE)
nzv
cat_data_inds=sapply(data,is.factor)
cat_data_inds
numeric_data_inds=which(sapply(data,is.numeric))
numeric_data_inds
cat_data_inds=which(sapply(data,is.factor))
cat_data_inds
summary(data[,numeric_data_inds])
summary(data[,cat_data_inds])
nzv=nzv(data[,c(numeric_data_inds,cat_data_inds)],saveMetrics=TRUE)
nzv
nzv=nzv(data[,c(numeric_data_inds)],saveMetrics=TRUE)
nzv
nzv=nzv(data[,c(numeric_data_inds,cat_data_inds)],saveMetrics=TRUE)
nzv
summary(data[,cat_data_inds])
which(nzv$nzv)
nzv$nzv
which(nzv$nzv)
nzv
rownames(nzv)
rownames(nzv)[which(nzv$nzv)]
which(names(data) %in% rownames(nzv)[which(nzv$nzv)])
data=data[,-which(names(data) %in% rownames(nzv)[which(nzv$nzv)])]
data
numeric_data_inds=which(sapply(data,is.numeric))
cat_data_inds=which(sapply(data,is.factor))
summary(data[,numeric_data_inds])
summary(data[,cat_data_inds])
ggplot(data,aes(x=AGE,y=NET_TKT_REV))+theme_bw()+geom_point()
ggplot(data,aes(x=NBR_CRUISES,y=NET_TKT_REV))+theme_bw()+geom_point()
ggplot(data,aes(x=AGE))+theme_bw()+geom_density()
ggplot(data)+theme_bw()+geom_density(aes(x=AGE,color=BKNG_STATUS))
summary(data[,numeric_data_inds])
data %>% group_by(BKNG_STATUS) %>%
summarise(AGE=mean(AGE),NBR_CRUISES=mean(NBR_CRUISES),NET_TKT_REV=mean(NET_TKT_REV))
data %>% group_by(BKNG_STATUS) %>% na.omit() %>%
summarise(AGE=mean(AGE),NBR_CRUISES=mean(NBR_CRUISES),NET_TKT_REV=mean(NET_TKT_REV))
ggplot(data)+theme_bw()+geom_density(aes(x=AGE,color=BKNG_STATUS))
ggplot(data)+theme_bw()+geom_density(aes(x=NBR_CRUISES,color=BKNG_STATUS))
ggplot(data)+theme_bw()+geom_density(aes(x=NET_TKT_REV,color=BKNG_STATUS))
ggplot(data)+theme_bw()+geom_density(aes(x=AGE,color=BKNG_STATUS))
View(data)
summary(data[,cat_data_inds])
data %>% group_by(BKNG_ID) %>% summarise(count=n()) %>% arrange(dessc(count))
data %>% group_by(BKNG_ID) %>% summarise(count=n()) %>% arrange(desc(count))
data$BKNG_ID=NULL
data$BKNG_CANCEL_DATE=NULL
data$BKNG_ID=NULL
data$BKNG_CANCEL_DATE=NULL
data$BKNG_OPEN_DATE=NULL
View(data)
data$SAIL_DATE=NULL
View(data)
data %>% group_by(BKNG_STATUS) %>% na.omit() %>%
summarise(AGE=mean(AGE),NBR_CRUISES=mean(NBR_CRUISES),NET_TKT_REV=mean(NET_TKT_REV))
data %>% group_by(BKNG_STATUS,GROUP_TYPE) %>% summarise(count=n())
suite_people=data %>% filter(META %in% c('S','D'),BKNG_STATUS=="B")
suite_people=data %>% filter(BKNG_STATUS=="B")
suite_people=suite_people %>% mutate(Suite=META %in% c('S','D'))
suite_people
View(suite_people)
suite_people %>% group_by(Suite) %>% na.omit() %>%
summarise(AGE=mean(AGE),NBR_CRUISES=mean(NBR_CRUISES),NET_TKT_REV=mean(NET_TKT_REV))
ggplot(suite_people)+theme_bw()+geom_density(aes(x=AGE,color=Suite))
ggplot(suite_people)+theme_bw()+geom_density(aes(x=AGE,color=NBR_CRUISES))
ggplot(suite_people)+theme_bw()+geom_density(aes(x=NBR_CRUISES,color=Suite))
hist(NBR_CRUISES)
hist(suite_people$NBR_CRUISES)
suite_people %>% arrange(desc(suite_people))
suite_people=suite_people %>% arrange(desc(suite_people))
View(suite_people)
suite_people=suite_people %>% arrange(desc(NBR_CRUISES))
View(suite_people)
suite_people %>% arrange(desc(NBR_CRUISES))
summary(suite_people$NBR_CRUISES)
ggplot(suite_people)+theme_bw()+geom_density(aes(x=NBR_CRUISES,color=Suite))
suite_people=suite_people %>% arrange(desc(NET_TKT_REV))
ggplot(suite_people)+theme_bw()+geom_density(aes(x=AGE,color=Suite))
suite_people=data %>% filter(BKNG_STATUS=="B")
suite_people=suite_people %>% mutate(Suite=META %in% c('S','D'))
suite_people %>% group_by(Suite) %>% na.omit() %>%
summarise(AGE=mean(AGE),NBR_CRUISES=mean(NBR_CRUISES),NET_TKT_REV=mean(NET_TKT_REV))
ggplot(suite_people)+theme_bw()+geom_density(aes(x=AGE,color=Suite))
ggplot(suite_people)+theme_bw()+geom_density(aes(x=NBR_CRUISES,color=Suite))
ggplot(suite_people)+theme_bw()+geom_density(aes(x=NET_TKT_REV,color=Suite))
ggplot(suite_people)+theme_bw()+geom_density(aes(x=NBR_CRUISES,color=Suite))
suite_people %>% group_by(Suite) %>% na.omit() %>%
summarise(AGE=mean(AGE),NBR_CRUISES=mean(NBR_CRUISES),NET_TKT_REV=mean(NET_TKT_REV))
summary(suite_people$suite_people)
ggplot(suite_people)+theme_bw()+geom_density(aes(x=NBR_CRUISES,color=Suite))
summary(suite_people$NBR_CRUISES)
View(suite_people)
suite_people=suite_people %>% arrange(desc(NBR_CRUISES))
View(suite_people)
suite_people %>% group_by(Suite) %>% na.omit() %>%
summarise(AGE=median(AGE),NBR_CRUISES=median(NBR_CRUISES),NET_TKT_REV=median(NET_TKT_REV))
ggplot(suite_people)+theme_bw()+geom_density(aes(x=AGE,color=Suite))
ggplot(suite_people)+theme_bw()+geom_density(aes(x=NBR_CRUISES,color=Suite))
suite_people %>% group_by(Suite) %>% na.omit() %>%
summarise(AGE=median(AGE),NBR_CRUISES=median(NBR_CRUISES),NET_TKT_REV=median(NET_TKT_REV))
ggplot(suite_people)+theme_bw()+geom_density(aes(x=NET_TKT_REV,color=Suite))
ggplot(suite_people)+theme_bw()+geom_density(aes(x=AGE,color=Suite))
summary(data[,cat_data_inds])
data=data %>% filter(BKNG_STATUS!="C")
data=tbl_df(read_csv("Holland America Revenue Science Interview REtention Dataset.csv"))
##Managing data types
#factors
data$BKNG_ID=as.factor(data$BKNG_ID)
data$HOME_STATE=as.factor(data$HOME_STATE)
data$NATIONALITY=as.factor(data$NATIONALITY)
data$HOME_COUNTRY=as.factor(data$HOME_COUNTRY)
data$GROUP_TYPE=as.factor(data$GROUP_TYPE)
data$BKNG_STATUS=as.factor(data$BKNG_STATUS)
data$CURRENCY_CODE=as.factor(data$CURRENCY_CODE)
data$AIR_FLAG=as.factor(data$AIR_FLAG)
data$BKNG_SOURCE=as.factor(data$BKNG_SOURCE)
data$BKNG_TYPE=as.factor(data$BKNG_TYPE)
data$GENDER=as.factor(data$GENDER)
data$DINING_TIME_CODE=as.factor(data$DINING_TIME_CODE)
data$DINING_TIME_CONF_FLAG=as.factor(data$DINING_TIME_CONF_FLAG)
data$META=as.factor(data$META)
#dates
data$BKNG_OPEN_DATE=as.Date(data$BKNG_OPEN_DATE,"%m/%d/%Y")
data$BKNG_CANCEL_DATE=as.Date(data$BKNG_CANCEL_DATE,"%m/%d/%Y")
data$INSURANCE_PYMT_DATE=as.Date(data$INSURANCE_PYMT_DATE,"%m/%d/%Y")
data$SAIL_DATE=as.Date(data$SAIL_DATE,"%m/%d/%Y")
numeric_data_inds=which(sapply(data,is.numeric))
cat_data_inds=which(sapply(data,is.factor))
summary(data[,numeric_data_inds])
summary(data[,cat_data_inds])
nzv=nzv(data[,c(numeric_data_inds,cat_data_inds)],saveMetrics=TRUE)
data=data[,-which(names(data) %in% rownames(nzv)[which(nzv$nzv)])]
data$BKNG_ID=NULL
data$BKNG_CANCEL_DATE=NULL
data$BKNG_OPEN_DATE=NULL
data$SAIL_DATE=NULL
which(data$BKNG_STATUS=="C")
which(data$BKNG_STATUS %in% "C")
data=data %>% filter(BKNG_STATUS!="G")
data %>% group_by(BKNG_STATUS) %>% na.omit() %>%
summarise(AGE=mean(AGE),NBR_CRUISES=mean(NBR_CRUISES),NET_TKT_REV=mean(NET_TKT_REV))
data %>% group_by(BKNG_STATUS,GROUP_TYPE) %>% summarise(count=n())
View(data)
data %>% group_by(BKNG_STATUS,META) %>% summarise(count=n())
min(data$INSURANCE_PYMT_DATE)
data=data %>% mutate(insurance= INSURANCE_PYMT_DATE>min(data$INSURANCE_PYMT_DATE))
View(data)
data$INSURANCE_PYMT_DATE=NULL
data %>% group_by(BKNG_STATUS,insurance) %>% summarise(count=n())
166/1237
8/787
data %>% group_by(BKNG_STATUS,insurance) %>% summarise(count=n())
ggplot(data)+theme_bw()+geom_density(aes(x=AGE,color=BKNG_STATUS))
inTrain = createDataPartition(y=data$BKNG_STATUS, p = .6)[[1]]
training = data[ inTrain,]
testing = data[-inTrain,]
training
modFit <- randomForest(retained ~ .,data=training)
modFit <- randomForest(BKNG_STATUS ~ .,data=training)
nrow(na.omit(data))
View(data)
##Importing Data
data=tbl_df(read_csv("Holland America Revenue Science Interview REtention Dataset.csv"))
##Managing data types
#factors
data$BKNG_ID=as.factor(data$BKNG_ID)
data$HOME_STATE=as.factor(data$HOME_STATE)
data$NATIONALITY=as.factor(data$NATIONALITY)
data$HOME_COUNTRY=as.factor(data$HOME_COUNTRY)
data$GROUP_TYPE=as.factor(data$GROUP_TYPE)
data$BKNG_STATUS=as.factor(data$BKNG_STATUS)
data$CURRENCY_CODE=as.factor(data$CURRENCY_CODE)
data$AIR_FLAG=as.factor(data$AIR_FLAG)
data$BKNG_SOURCE=as.factor(data$BKNG_SOURCE)
data$BKNG_TYPE=as.factor(data$BKNG_TYPE)
data$GENDER=as.factor(data$GENDER)
data$DINING_TIME_CODE=as.factor(data$DINING_TIME_CODE)
data$DINING_TIME_CONF_FLAG=as.factor(data$DINING_TIME_CONF_FLAG)
data$META=as.factor(data$META)
#dates
data$BKNG_OPEN_DATE=as.Date(data$BKNG_OPEN_DATE,"%m/%d/%Y")
data$BKNG_CANCEL_DATE=as.Date(data$BKNG_CANCEL_DATE,"%m/%d/%Y")
data$INSURANCE_PYMT_DATE=as.Date(data$INSURANCE_PYMT_DATE,"%m/%d/%Y")
data$SAIL_DATE=as.Date(data$SAIL_DATE,"%m/%d/%Y")
numeric_data_inds=which(sapply(data,is.numeric))
cat_data_inds=which(sapply(data,is.factor))
nzv=nzv(data[,c(numeric_data_inds,cat_data_inds)],saveMetrics=TRUE)
nzv
apply(data,2,function(x){sum(is.na(x))/length(x)})
hist(missing_inds)
which(missing_inds>.5)
missing_inds=apply(data,2,function(x){sum(is.na(x))/length(x)})
which(missing_inds>.5)
hist(missing_inds)
which(missing_inds>.2)
##Importing Data
data=tbl_df(read_csv("Holland America Revenue Science Interview REtention Dataset.csv"))
##Managing data types
#factors
data$BKNG_ID=as.factor(data$BKNG_ID)
data$HOME_STATE=as.factor(data$HOME_STATE)
data$NATIONALITY=as.factor(data$NATIONALITY)
data$HOME_COUNTRY=as.factor(data$HOME_COUNTRY)
data$GROUP_TYPE=as.factor(data$GROUP_TYPE)
data$BKNG_STATUS=as.factor(data$BKNG_STATUS)
data$CURRENCY_CODE=as.factor(data$CURRENCY_CODE)
data$AIR_FLAG=as.factor(data$AIR_FLAG)
data$BKNG_SOURCE=as.factor(data$BKNG_SOURCE)
data$BKNG_TYPE=as.factor(data$BKNG_TYPE)
data$GENDER=as.factor(data$GENDER)
data$DINING_TIME_CODE=as.factor(data$DINING_TIME_CODE)
data$DINING_TIME_CONF_FLAG=as.factor(data$DINING_TIME_CONF_FLAG)
data$META=as.factor(data$META)
#dates
data$BKNG_OPEN_DATE=as.Date(data$BKNG_OPEN_DATE,"%m/%d/%Y")
data$BKNG_CANCEL_DATE=as.Date(data$BKNG_CANCEL_DATE,"%m/%d/%Y")
data$INSURANCE_PYMT_DATE=as.Date(data$INSURANCE_PYMT_DATE,"%m/%d/%Y")
data$SAIL_DATE=as.Date(data$SAIL_DATE,"%m/%d/%Y")
numeric_data_inds=which(sapply(data,is.numeric))
cat_data_inds=which(sapply(data,is.factor))
summary(data[,numeric_data_inds])
summary(data[,cat_data_inds])
nzv=nzv(data[,c(numeric_data_inds,cat_data_inds)],saveMetrics=TRUE)
data=data[,-which(names(data) %in% rownames(nzv)[which(nzv$nzv)])]
missing_inds=apply(data,2,function(x){sum(is.na(x))/length(x)})
data=data[,-which(missing_inds>.2)]
data$BKNG_ID=NULL
data$BKNG_CANCEL_DATE=NULL
data$BKNG_OPEN_DATE=NULL
data$SAIL_DATE=NULL
data=data %>% filter(BKNG_STATUS!="G")
View(data)
data=data %>% mutate(insurance= INSURANCE_PYMT_DATE>min(data$INSURANCE_PYMT_DATE))
data$INSURANCE_PYMT_DATE=NULL
data %>% group_by(BKNG_STATUS) %>% na.omit() %>%
summarise(AGE=mean(AGE),NBR_CRUISES=mean(NBR_CRUISES),NET_TKT_REV=mean(NET_TKT_REV))
data %>% group_by(BKNG_STATUS,insurance) %>% summarise(count=n())
inTrain = createDataPartition(y=data$BKNG_STATUS, p = .6)[[1]]
training = data[ inTrain,]
testing = data[-inTrain,]
modFit <- randomForest(BKNG_STATUS ~ .,data=training)
nrow(na.omit(data))
data=na.omit(data)
inTrain = createDataPartition(y=data$BKNG_STATUS, p = .6)[[1]]
training = data[ inTrain,]
testing = data[-inTrain,]
modFit <- randomForest(BKNG_STATUS ~ .,data=training)
View(data)
summary(data$BKNG_STATA)
summary(data$BKNG_STATUS)
data$BKNG_STATUS=as.factor(as.character(BKNG_STATUS))
##Importing Data
data=tbl_df(read_csv("Holland America Revenue Science Interview REtention Dataset.csv"))
##Managing data types
#factors
data$BKNG_ID=as.factor(data$BKNG_ID)
data$HOME_STATE=as.factor(data$HOME_STATE)
data$NATIONALITY=as.factor(data$NATIONALITY)
data$HOME_COUNTRY=as.factor(data$HOME_COUNTRY)
data$GROUP_TYPE=as.factor(data$GROUP_TYPE)
data$BKNG_STATUS=as.factor(data$BKNG_STATUS)
data$CURRENCY_CODE=as.factor(data$CURRENCY_CODE)
data$AIR_FLAG=as.factor(data$AIR_FLAG)
data$BKNG_SOURCE=as.factor(data$BKNG_SOURCE)
data$BKNG_TYPE=as.factor(data$BKNG_TYPE)
data$GENDER=as.factor(data$GENDER)
data$DINING_TIME_CODE=as.factor(data$DINING_TIME_CODE)
data$DINING_TIME_CONF_FLAG=as.factor(data$DINING_TIME_CONF_FLAG)
data$META=as.factor(data$META)
#dates
data$BKNG_OPEN_DATE=as.Date(data$BKNG_OPEN_DATE,"%m/%d/%Y")
data$BKNG_CANCEL_DATE=as.Date(data$BKNG_CANCEL_DATE,"%m/%d/%Y")
data$INSURANCE_PYMT_DATE=as.Date(data$INSURANCE_PYMT_DATE,"%m/%d/%Y")
data$SAIL_DATE=as.Date(data$SAIL_DATE,"%m/%d/%Y")
numeric_data_inds=which(sapply(data,is.numeric))
cat_data_inds=which(sapply(data,is.factor))
summary(data[,numeric_data_inds])
summary(data[,cat_data_inds])
nzv=nzv(data[,c(numeric_data_inds,cat_data_inds)],saveMetrics=TRUE)
data=data[,-which(names(data) %in% rownames(nzv)[which(nzv$nzv)])]
missing_inds=apply(data,2,function(x){sum(is.na(x))/length(x)})
data=data[,-which(missing_inds>.2)]
data$BKNG_ID=NULL
data$BKNG_CANCEL_DATE=NULL
data$BKNG_OPEN_DATE=NULL
data$SAIL_DATE=NULL
data=data %>% filter(BKNG_STATUS!="G")
data$BKNG_STATUS=as.factor(as.character(BKNG_STATUS))
View(data)
data$BKNG_STATUS=as.factor(as.character(data$BKNG_STATUS))
data=data %>% mutate(insurance= INSURANCE_PYMT_DATE>min(data$INSURANCE_PYMT_DATE))
data$INSURANCE_PYMT_DATE=NULL
data %>% group_by(BKNG_STATUS) %>% na.omit() %>%
summarise(AGE=mean(AGE),NBR_CRUISES=mean(NBR_CRUISES),NET_TKT_REV=mean(NET_TKT_REV))
data %>% group_by(BKNG_STATUS,insurance) %>% summarise(count=n())
ggplot(data)+theme_bw()+geom_density(aes(x=AGE,color=BKNG_STATUS))
data=na.omit(data)
inTrain = createDataPartition(y=data$BKNG_STATUS, p = .6)[[1]]
training = data[ inTrain,]
testing = data[-inTrain,]
modFit <- randomForest(BKNG_STATUS ~ .,data=training)
train_pred=predict(modFit,newdata= training, type = "response")
confusionMatrix(training$BKNG_STATUS,train_pred )
train_pred=predict(modFit,newdata= training, type = "response")
confusionMatrix(training$BKNG_STATUS,train_pred )
train_pred=predict(modFit,newdata= training)
confusionMatrix(training$BKNG_STATUS,train_pred )
test_pred=predict(modFit,newdata= testing)
confusionMatrix(testing$retained,test_pred)
confusionMatrix(testing$BKNG_STATUS,test_pred)
varImpPlot(modFit,main="Variable Importance")
ggplot(data)+theme_bw()+geom_density(aes(x=AGE,color=BKNG_STATUS))
ggplot(data)+theme_bw()+geom_density(aes(x=NET_TKT_REV,color=BKNG_STATUS))
data %>% group_by(BKNG_STATUS)  %>%
summarise(AGE=mean(AGE),NBR_CRUISES=mean(NBR_CRUISES),NET_TKT_REV=mean(NET_TKT_REV))
data %>% group_by(BKNG_STATUS,DINING_TIME_CODE) %>% summarise(count=n())
data %>% group_by(BKNG_STATUS,BKNG_TYPE) %>% summarise(count=n())
data %>% group_by(BKNG_STATUS,DINING_TIME_CODE) %>% summarise(count=n())
data %>% group_by(BKNG_STATUS,BKNG_TYPE) %>% summarise(count=n())
data %>% group_by(BKNG_STATUS,META) %>% summarise(count=n())
data %>% group_by(BKNG_STATUS,insurance) %>% summarise(count=n())
suite_people=data %>% filter(BKNG_STATUS=="B")
suite_people=suite_people %>% mutate(Suite=META %in% c('S','D'))
suite_people=data %>% filter(BKNG_STATUS=="B")
suite_people=suite_people %>% mutate(Suite=META %in% c('S','D'))
nrow(na.omit(suite_people))
modFit <- randomForest(Suite ~ .,data=suite_people)
suite_people=data %>% filter(BKNG_STATUS=="B")
suite_people=suite_people %>% mutate(Suite=META %in% c('S','D'))
modFit <- randomForest(Suite ~ .,data=suite_people)
View(suite_people)
varImpPlot(modFit,main="Variable Importance")
suite_people$META=NULL
modFit <- randomForest(Suite ~ .,data=suite_people)
varImpPlot(modFit,main="Variable Importance")
suite_people$Suite="Coach"
suite_people$Suite[which(META %in% c('S','D'))]="Suite"
suite_people$Suite[which(suite_people$META %in% c('S','D'))]="Suite"
summary(suite_people$Suite)
suite_people$Suite=as.factor(suite_people$Suite)
summary(suite_people$Suite)
which(suite_people$META %in% c('S','D'))
suite_people=data %>% filter(BKNG_STATUS=="B")
suite_people$Suite="Coach"
suite_people$Suite[which(suite_people$META %in% c('S','D'))]="Suite"
suite_people$Suite=as.factor(suite_people$Suite)
summary(suite_people$Suite)
suite_people$META=NULL
modFit <- randomForest(Suite ~ .,data=suite_people)
varImpPlot(modFit,main="Variable Importance")
suite_people %>% group_by(Suite) %>% na.omit() %>%
summarise(AGE=median(AGE),NBR_CRUISES=median(NBR_CRUISES),NET_TKT_REV=median(NET_TKT_REV))
suite_people %>% group_by(Suite) %>%
summarise(AGE=median(AGE),NBR_CRUISES=median(NBR_CRUISES),NET_TKT_REV=median(NET_TKT_REV))
suite_people %>% group_by(Suite) %>%
summarise(AGE=mean(AGE),NBR_CRUISES=mean(NBR_CRUISES),NET_TKT_REV=mean(NET_TKT_REV))
ggplot(suite_people)+theme_bw()+geom_density(aes(x=NET_TKT_REV,color=Suite))
varImpPlot(modFit,main="Variable Importance")
ggplot(suite_people)+theme_bw()+geom_density(aes(x=AGE,color=Suite))
ggplot(suite_people)+theme_bw()+geom_density(aes(x=NBR_CRUISES,color=Suite))
ggplot(suite_people %>% filter(NBR_CRUISES<50))+theme_bw()+geom_density(aes(x=NBR_CRUISES,color=Suite))
ggplot(suite_people %>% filter(NBR_CRUISES<10))+theme_bw()+geom_density(aes(x=NBR_CRUISES,color=Suite))
ggplot(suite_people %>% filter(NBR_CRUISES>0))+theme_bw()+geom_density(aes(x=NBR_CRUISES,color=Suite))
ggplot(suite_people %>% filter(NBR_CRUISES>0,NBR_CRUISES<50))+theme_bw()+geom_density(aes(x=NBR_CRUISES,color=Suite))
varImpPlot(modFit,main="Variable Importance")
suite_people %>% group_by(Suite,BKNG_SOURCE) %>%  summarise(count=n())
53/170
174/985
suite_people %>% group_by(Suite,DINING_TIME_CODE) %>%  summarise(count=n())
